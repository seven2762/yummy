server:
  port: 8082

spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: ${NAVER_CLIENT}
            client-secret: ${NAVER_SECRET}
            redirect-uri: ${NAVER_CALLBACK_URL}
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - profile_image
            client-name: Naver
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    show-sql: true
  data:
    redis:
      host: redis
      password: ${REDIS_PASSWORD}
      port: 6379
jwt:
  secret: ${JWT_TOKEN}
  access-expired-time: 3600
  refresh-token-expired-time: 1209600

logging:
  level:
    org:
      springframework:
        security=DEBUG: